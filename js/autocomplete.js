// Generated by CoffeeScript 1.10.0
(function() {
  var extractLast, split;

  split = function(val) {
    return val.split(/,\s*/);
  };

  extractLast = function(term) {
    return split(term).pop();
  };


  /*
    Prepare combo boxes for tags.
   */

  window.initTagInput = function(elem) {
    var availableTags;
    availableTags = [];
    return $(elem).autocomplete({
      minLength: 0,
      source: function(request, response) {
        if (availableTags.length === 0) {
          return $.getJSON("api/tag.php", function(data, status, xhr) {
            availableTags = data.tags;
            return response($.ui.autocomplete.filter(availableTags, extractLast(request.term)));
          });
        } else {
          return response($.ui.autocomplete.filter(availableTags, extractLast(request.term)));
        }
      },
      focus: function() {
        return false;
      },
      select: function(event, ui) {
        var terms;
        terms = split(this.value);
        terms.pop();
        terms.push(ui.item.value);
        terms.push("");
        this.value = terms.join(", ");
        return false;
      }
    });
  };


  /*
    Prepare combo boxes for function search
   */

  window.initFuncInput = function(elem) {
    if ((elem.autocomplete("instance") != null)) {
      elem.autocomplete("destroy");
    }
    return elem.autocomplete({
      delay: 0,
      minLength: 1,
      source: function(request, response) {
        return $.getJSON("api/list.php?query=" + request.term, {
          term: extractLast(request.term)
        }, response);
      },
      select: function(event, ui) {
        $(this).val(ui.item.name);
        $(this).closest('.function-node').data('callee-id', ui.item.value);
        return false;
      }
    }).focusout(function() {
      return $(this).autocomplete("close");
    });
  };


  /*
    Prepare combo boxes for variable selection
   */

  window.initVarInput = function(elem) {
    var properties, vars;
    vars = [];
    $('.varRow').not('#var-prototype').each(function() {
      return vars.push($(this).data('name'));
    });
    properties = ["", "[*]", ".length"];
    if ((elem.autocomplete("instance") != null)) {
      elem.autocomplete("destroy");
    }
    return elem.autocomplete({
      delay: 0,
      minLength: 0,
      source: function(request, response) {
        var matcher, newSrc, val;
        val = request.term;
        if (val === "") {
          this.src = vars;
        } else if ($.inArray(val, vars) > -1) {
          newSrc = [];
          $.each(properties, function(i, elem) {
            return newSrc.push({
              value: val + elem,
              label: val + elem,
              variable: val
            });
          });
          this.src = newSrc;
        }
        matcher = new RegExp($.ui.autocomplete.escapeRegex(request.term), "i");
        return response($.grep(this.src, function(value) {
          value = value.label || value.value || value;
          return matcher.test(value);
        }));
      },
      select: function(event, ui) {
        var ref, val;
        val = (ref = ui.item.variable) != null ? ref : ui.item.label;
        return $(this).autocomplete("search", val);
      }
    }).click(function() {
      return $(this).autocomplete("search", $(this).val());
    }).focusout(function() {
      return $(this).autocomplete("close");
    });
  };


  /*
    Prepare combo boxes for variable initialization
   */

  window.initValueInput = function(elem) {
    var input;
    input = elem.find('.value');
    if ((input.autocomplete("instance") != null)) {
      input.autocomplete("destroy");
    }
    return input.autocomplete({
      delay: 0,
      minLength: 0,
      source: window.initializations
    }).click(function() {
      return $(this).autocomplete("search", "");
    }).focusout(function() {
      return $(this).autocomplete("close");
    });
  };

}).call(this);
