@import "mixins";

@annotations-color: #808080;
@operations-color: #ffb181;
@structure-color: #b2e792;
@values-color: #d5a2da;

.prepare-color(@c) {
  @color: screen(@c, #cccccc);
  @color-strong: @c;
  @color-stronger: darken(@c, 30%);
}

.algorithm {
  ul {
    padding: 0;
    margin: 0;
    width: 100%;
    min-height: 20px;
    .node {
      @border: 1px solid gray;
      @radius: 5px;
      list-style-type: none;

      table {
        border-collapse: separate;
        padding: 1px 0 0 1px;
        text-align: left;
      }

      input, select {
        background: none;
        border: none;
        line-height: normal;
      }

      .invalid-flag {
        display: none;
      }

      &.expandable:not(.expanded) > table > tbody > tr.expanded-only {
        display: none;
      }

      .node-box {
        min-width: 20px;
        font-family: monospace, Courier;

        &.full-width {
          width: 100%;
        }
        &.half-width {
          width: 50%;
        }

        &.top {
          border-top: @border;
          &.left {
            .border-top-left-radius(@radius);
          }
          &.right {
            .border-top-right-radius(@radius);
          }
        }
        &.right {
          border-right: @border;
        }
        &.bottom {
          border-bottom: @border;
          &.left {
            .border-bottom-left-radius(@radius);
          }
          &.right {
            .border-bottom-right-radius(@radius);
          }
        }
        &.left {
          border-left: @border;
        }
      }

      .nodeStyle(@c) {
        // generate @color, @color-strong, @color-stronger
        .prepare-color(@c);
        // format node-box
        & > table > tbody > tr > td.node-box {
          background-color: @color;
          select, input {
            border: 1px dashed @color-stronger;
          }
        }
        // format highlighted node-box (cursor)
        &.cursor > table > tbody > tr > td.node-box {
          background-color: @color-strong;
        }
        // mind the last body
        tr:not(:last-child) .body {
          padding-bottom: 1px;
        }
        // hide elements of expandable nodes
        &.expanded > table > tbody > tr.head .collapsed-only {
          display: none;
        }
      }

      &.assign-node {
        .nodeStyle(@operations-color);
      }
      &.comment-node {
        .nodeStyle(@annotations-color);
      }
      &.compare-node {
        .nodeStyle(@operations-color);
      }
      &.function-node {
        .nodeStyle(@operations-color);
        .act-pars-container {
          display: inline-block;
        }
      }
      &.if-node {
        .nodeStyle(@structure-color);
      }
      &.inc-node {
        .nodeStyle(@operations-color);
      }
      &.return-node {
        .nodeStyle(@operations-color);
      }
      &.swap-node {
        .nodeStyle(@operations-color);
      }
      &.value-node {
        .nodeStyle(@values-color);
      }
      &.while-node {
        .nodeStyle(@structure-color);
      }
    }
  }
}